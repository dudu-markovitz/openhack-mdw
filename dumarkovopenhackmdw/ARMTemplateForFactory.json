{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dumarkovopenhackmdw"
		},
		"dumarkovopenhackmdw_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'dumarkovopenhackmdw'"
		},
		"fourthcoffee_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'fourthcoffee'"
		},
		"southridge_cloudsales_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'southridge_cloudsales'"
		},
		"southridge_cloudstreaming_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'southridge_cloudstreaming'"
		},
		"southridge_southridge_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'southridge_southridge'"
		},
		"vanarsdelltd_onpremrentals_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'vanarsdelltd_onpremrentals'"
		},
		"vanarsdelltd_onpremrentals_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'vanarsdelltd_onpremrentals'"
		},
		"dumarkovopenhackmdw_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dumarkovopenhackmdw.dfs.core.windows.net"
		},
		"dumarkovopenhackmdw_keyvault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://dumarkovopenhackmdw.vault.azure.net/"
		},
		"fourthcoffee_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "c:\\"
		},
		"fourthcoffee_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "openhackadmin"
		},
		"vanarsdelltd_onpremrentals_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "openhackadmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/copy-azure-sql-southridge-cloudsales-dbo-to-adls-dumarkovopenhackmdw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_gi7",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_gi7",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "source-data/southridge/cloudsales/dbo/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "src_azure_sql_southridge_cloudsales_dbo",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dst_adls_dumarkovopenhackmdw_southridge_cloudsales_dbo",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Addresses"
								},
								"destination": {
									"fileName": "Addresses.parquet"
								}
							},
							{
								"source": {
									"table": "Customers"
								},
								"destination": {
									"fileName": "Customers.parquet"
								}
							},
							{
								"source": {
									"table": "OrderDetails"
								},
								"destination": {
									"fileName": "OrderDetails.parquet"
								}
							},
							{
								"source": {
									"table": "Orders"
								},
								"destination": {
									"fileName": "Orders.parquet"
								}
							}
						]
					}
				},
				"folder": {
					"name": "Initial Load"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/src_azure_sql_southridge_cloudsales_dbo')]",
				"[concat(variables('factoryId'), '/datasets/dst_adls_dumarkovopenhackmdw_southridge_cloudsales_dbo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy-azure-sql-southridge-cloudstreaming-dbo-to-adls-dumarkovopenhackmdw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_r1e",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_r1e",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "source-data/southridge/cloudstreaming/dbo/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "src_azure_sql_southridge_cloudstreaming_dbo",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dst_adls_dumarkovopenhackmdw_southridge_cloudstreaming_dbo",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Addresses"
								},
								"destination": {
									"fileName": "Addresses.parquet"
								}
							},
							{
								"source": {
									"table": "Customers"
								},
								"destination": {
									"fileName": "Customers.parquet"
								}
							},
							{
								"source": {
									"table": "Transactions"
								},
								"destination": {
									"fileName": "Transactions.parquet"
								}
							}
						]
					}
				},
				"folder": {
					"name": "Initial Load"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/src_azure_sql_southridge_cloudstreaming_dbo')]",
				"[concat(variables('factoryId'), '/datasets/dst_adls_dumarkovopenhackmdw_southridge_cloudstreaming_dbo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy-cosmosdb-southridge-southridge-movies-to-adls-dumarkovopenhackmdw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_0qj",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "movies"
							},
							{
								"name": "Destination",
								"value": "source-data/southridge/southridge/movies.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"preferredRegions": []
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['actors']"
										},
										"sink": {
											"name": "actors",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['availabilityDate']"
										},
										"sink": {
											"name": "availabilityDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['genre']"
										},
										"sink": {
											"name": "genre",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rating']"
										},
										"sink": {
											"name": "rating",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['releaseYear']"
										},
										"sink": {
											"name": "releaseYear",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['runtime']"
										},
										"sink": {
											"name": "runtime",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['streamingAvailabilityDate']"
										},
										"sink": {
											"name": "streamingAvailabilityDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['tier']"
										},
										"sink": {
											"name": "tier",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['title']"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_rid']"
										},
										"sink": {
											"name": "_rid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_self']"
										},
										"sink": {
											"name": "_self",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_etag']"
										},
										"sink": {
											"name": "_etag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_attachments']"
										},
										"sink": {
											"name": "_attachments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_ts']"
										},
										"sink": {
											"name": "_ts",
											"type": "Int64"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "src_cosmosdb_southridge_southridge_movies",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dst_adls_dumarkovopenhackmdw_southridge_southridge_movies",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Initial Load"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/src_cosmosdb_southridge_southridge_movies')]",
				"[concat(variables('factoryId'), '/datasets/dst_adls_dumarkovopenhackmdw_southridge_southridge_movies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy-file-system-fourthcoffee-rentals-to-adls-dumarkovopenhackmdw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_m6x",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "Rentals/"
							},
							{
								"name": "Destination",
								"value": "source-data/fourthcoffee/rentals/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": false
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "src_file_system_fourthcoffee_rentals_binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dst_adls_dumarkovopenhackmdw_fourthcoffee_rentals_binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Initial Load"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/src_file_system_fourthcoffee_rentals_binary')]",
				"[concat(variables('factoryId'), '/datasets/dst_adls_dumarkovopenhackmdw_fourthcoffee_rentals_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy-sql-server-vanarsdelltd-onpremrentals-to-adls-dumarkovopenhackmdw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_6zi",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_6zi",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "source-data/vanarsdelltd/onpremrentals/dbo/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "src_sql_server_vanarsdelltd_onpremrentals",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dst_adls_dumarkovopenhackmdw_vanarsdelltd_onpremrentals",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Actors"
								},
								"destination": {
									"fileName": "Actors.parquet"
								}
							},
							{
								"source": {
									"table": "Customers"
								},
								"destination": {
									"fileName": "Customers.parquet"
								}
							},
							{
								"source": {
									"table": "MovieActors"
								},
								"destination": {
									"fileName": "MovieActors.parquet"
								}
							},
							{
								"source": {
									"table": "Movies"
								},
								"destination": {
									"fileName": "Movies.parquet"
								}
							},
							{
								"source": {
									"table": "OnlineMovieMappings"
								},
								"destination": {
									"fileName": "OnlineMovieMappings.parquet"
								}
							},
							{
								"source": {
									"table": "Transactions"
								},
								"destination": {
									"fileName": "Transactions.parquet"
								}
							}
						]
					}
				},
				"folder": {
					"name": "Initial Load"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/src_sql_server_vanarsdelltd_onpremrentals')]",
				"[concat(variables('factoryId'), '/datasets/dst_adls_dumarkovopenhackmdw_vanarsdelltd_onpremrentals')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incremental_cloudsales_orderdetails_to_adls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy new or updated rows only from database using external control table",
				"activities": [
					{
						"name": "LookupLastWaterMark",
						"description": "Retrieve the last high-watermark value stored in external control table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select @{pipeline().parameters.Control_Table_Column_Name} as WatermarkValue from @{pipeline().parameters.Control_Table_Table_Name}",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "AzureSqlDatabaseExternal_ControlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LookupCurrentWaterMark",
						"description": "Retrieve  the current maximum value in watermark column of source data store",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select MAX(',pipeline().parameters.Data_Source_WaterMarkColumn, ') as NewWatermarkValue from ',pipeline().parameters.Data_Source_Table_Name)",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "AzureSqlDatabaseDataSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "DeltaCopyfromDB",
						"description": "Copy activity to use query to filter the delta data by > last high-watermark and <= current high-watermark from source database, and then only copy the changes to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupCurrentWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupLastWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from @{pipeline().parameters.Data_Source_Table_Name} where @{pipeline().parameters.Data_Source_WaterMarkColumn} > '@{activity('LookupLastWaterMark').output.firstRow.WatermarkValue}' and @{pipeline().parameters.Data_Source_WaterMarkColumn} <= '@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "AzureSqlDatabaseDataSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataDestination",
								"type": "DatasetReference",
								"parameters": {
									"Data_Destination_Container": {
										"value": "@pipeline().parameters.Data_Destination_Container",
										"type": "Expression"
									},
									"Data_Destination_Directory": {
										"value": "@pipeline().parameters.Data_Destination_Directory",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "UpdateWaterMark",
						"description": "Stored procedure activity to store the new high-watermark value into external control table for delta data loading. ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DeltaCopyfromDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[control_table_orderdetails_update]",
							"storedProcedureParameters": {
								"wm": {
									"value": {
										"value": "@activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue",
										"type": "Expression"
									},
									"type": "datetime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "southridge_cloudsales",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"Data_Source_Table_Name": {
						"type": "String",
						"defaultValue": "dbo.orderdetails"
					},
					"Data_Source_WaterMarkColumn": {
						"type": "String",
						"defaultValue": "CreatedDate"
					},
					"Data_Destination_Container": {
						"type": "String",
						"defaultValue": "source-data"
					},
					"Data_Destination_Directory": {
						"type": "String",
						"defaultValue": "southridge/cloudsales/dbo/"
					},
					"Control_Table_Table_Name": {
						"type": "String",
						"defaultValue": "control_table_orderdetails"
					},
					"Control_Table_Column_Name": {
						"type": "String",
						"defaultValue": "wm"
					}
				},
				"folder": {
					"name": "Incremental Load"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDatabaseExternal_ControlTable')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDatabaseDataSource')]",
				"[concat(variables('factoryId'), '/datasets/DataDestination')]",
				"[concat(variables('factoryId'), '/linkedServices/southridge_cloudsales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incremental_cloudsales_orders_to_adls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy new or updated rows only from database using external control table",
				"activities": [
					{
						"name": "LookupLastWaterMark",
						"description": "Retrieve the last high-watermark value stored in external control table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select @{pipeline().parameters.Control_Table_Column_Name} as WatermarkValue from @{pipeline().parameters.Control_Table_Table_Name}",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "AzureSqlDatabaseExternal_ControlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LookupCurrentWaterMark",
						"description": "Retrieve  the current maximum value in watermark column of source data store",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select MAX(',pipeline().parameters.Data_Source_WaterMarkColumn, ') as NewWatermarkValue from ',pipeline().parameters.Data_Source_Table_Name)",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "AzureSqlDatabaseDataSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "DeltaCopyfromDB",
						"description": "Copy activity to use query to filter the delta data by > last high-watermark and <= current high-watermark from source database, and then only copy the changes to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupCurrentWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupLastWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from @{pipeline().parameters.Data_Source_Table_Name} where @{pipeline().parameters.Data_Source_WaterMarkColumn} > '@{activity('LookupLastWaterMark').output.firstRow.WatermarkValue}' and @{pipeline().parameters.Data_Source_WaterMarkColumn} <= '@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "AzureSqlDatabaseDataSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataDestination",
								"type": "DatasetReference",
								"parameters": {
									"Data_Destination_Container": {
										"value": "@pipeline().parameters.Data_Destination_Container",
										"type": "Expression"
									},
									"Data_Destination_Directory": {
										"value": "@pipeline().parameters.Data_Destination_Directory",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "UpdateWaterMark",
						"description": "Stored procedure activity to store the new high-watermark value into external control table for delta data loading. ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DeltaCopyfromDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[control_table_orders_update]",
							"storedProcedureParameters": {
								"wm": {
									"value": {
										"value": "@activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue",
										"type": "Expression"
									},
									"type": "datetime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "southridge_cloudsales",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"Data_Source_Table_Name": {
						"type": "String",
						"defaultValue": "dbo.orders"
					},
					"Data_Source_WaterMarkColumn": {
						"type": "String",
						"defaultValue": "CreatedDate"
					},
					"Data_Destination_Container": {
						"type": "String",
						"defaultValue": "source-data"
					},
					"Data_Destination_Directory": {
						"type": "String",
						"defaultValue": "southridge/cloudsales/dbo/"
					},
					"Control_Table_Table_Name": {
						"type": "String",
						"defaultValue": "control_table_orders"
					},
					"Control_Table_Column_Name": {
						"type": "String",
						"defaultValue": "wm"
					}
				},
				"folder": {
					"name": "Incremental Load"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDatabaseExternal_ControlTable')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDatabaseDataSource')]",
				"[concat(variables('factoryId'), '/datasets/DataDestination')]",
				"[concat(variables('factoryId'), '/linkedServices/southridge_cloudsales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseDataSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your source data store.",
				"linkedServiceName": {
					"referenceName": "southridge_cloudsales",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataSourceTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/southridge_cloudsales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseExternal_ControlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "External control table to store high water mark value.",
				"linkedServiceName": {
					"referenceName": "southridge_cloudsales",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/southridge_cloudsales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your destination data store.",
				"linkedServiceName": {
					"referenceName": "dumarkovopenhackmdw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Data_Destination_Container": {
						"type": "String"
					},
					"Data_Destination_Directory": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@{dataset().Data_Destination_Directory}",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@{dataset().Data_Destination_Container}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dumarkovopenhackmdw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dst_adls_dumarkovopenhackmdw_fourthcoffee_rentals_binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dumarkovopenhackmdw",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "fourthcoffee/rentals",
						"fileSystem": "source-data"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dumarkovopenhackmdw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dst_adls_dumarkovopenhackmdw_fourthcoffee_rentals_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dumarkovopenhackmdw",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "fourthcoffee/rentals",
						"fileSystem": "source-data"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "UTF8"
					},
					{
						"name": "ActorName",
						"type": "UTF8"
					},
					{
						"name": "Gender",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dumarkovopenhackmdw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dst_adls_dumarkovopenhackmdw_southridge_cloudsales_dbo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dumarkovopenhackmdw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": "southridge/cloudsales/dbo",
						"fileSystem": "source-data"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dumarkovopenhackmdw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dst_adls_dumarkovopenhackmdw_southridge_cloudstreaming_dbo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dumarkovopenhackmdw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": "southridge/cloudstreaming/dbo",
						"fileSystem": "source-data"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dumarkovopenhackmdw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dst_adls_dumarkovopenhackmdw_southridge_southridge_movies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dumarkovopenhackmdw",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "movies.parquet",
						"folderPath": "southridge/southridge",
						"fileSystem": "source-data"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dumarkovopenhackmdw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dst_adls_dumarkovopenhackmdw_vanarsdelltd_onpremrentals')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dumarkovopenhackmdw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": "vanarsdelltd/onpremrentals/dbo",
						"fileSystem": "source-data"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dumarkovopenhackmdw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_azure_sql_southridge_cloudsales_dbo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "southridge_cloudsales",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/southridge_cloudsales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_azure_sql_southridge_cloudstreaming_dbo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "southridge_cloudstreaming",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/southridge_cloudstreaming')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_cosmosdb_southridge_southridge_movies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "southridge_southridge",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"actors": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									}
								}
							}
						},
						"availabilityDate": {
							"type": "string"
						},
						"genre": {
							"type": "string"
						},
						"rating": {
							"type": "string"
						},
						"releaseYear": {
							"type": "integer"
						},
						"runtime": {
							"type": "integer"
						},
						"streamingAvailabilityDate": {
							"type": "string"
						},
						"tier": {
							"type": "integer"
						},
						"title": {
							"type": "string"
						},
						"id": {
							"type": "string"
						},
						"_rid": {
							"type": "string"
						},
						"_self": {
							"type": "string"
						},
						"_etag": {
							"type": "string"
						},
						"_attachments": {
							"type": "string"
						},
						"_ts": {
							"type": "integer"
						}
					}
				},
				"typeProperties": {
					"collectionName": "movies"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/southridge_southridge')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_file_system_fourthcoffee_rentals_binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "fourthcoffee",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"folderPath": "Rentals"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/fourthcoffee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_file_system_fourthcoffee_rentals_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "fourthcoffee",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"folderPath": "Rentals"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "String"
					},
					{
						"name": "ActorName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/fourthcoffee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_sql_server_vanarsdelltd_onpremrentals')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "vanarsdelltd_onpremrentals",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/vanarsdelltd_onpremrentals')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dumarkovopenhackmdw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dumarkovopenhackmdw_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('dumarkovopenhackmdw_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dumarkovopenhackmdw_keyvault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('dumarkovopenhackmdw_keyvault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/fourthcoffee')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('fourthcoffee_properties_typeProperties_host')]",
					"userId": "[parameters('fourthcoffee_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('fourthcoffee_password')]"
					}
				},
				"connectVia": {
					"referenceName": "FourthCoffee",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/FourthCoffee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/southridge_cloudsales')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('southridge_cloudsales_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/southridge_cloudstreaming')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('southridge_cloudstreaming_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/southridge_southridge')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('southridge_southridge_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vanarsdelltd_onpremrentals')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('vanarsdelltd_onpremrentals_connectionString')]",
					"userName": "[parameters('vanarsdelltd_onpremrentals_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('vanarsdelltd_onpremrentals_password')]"
					}
				},
				"connectVia": {
					"referenceName": "VanArsdelLtd",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/VanArsdelLtd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FourthCoffee')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VanArsdelLtd')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}